# Automatically generated by Updater v1.0
# @author Daniel J. Finnegan

cmake_minimum_required (VERSION 2.8)
cmake_policy (SET CMP0048 NEW)

project (
	KinectTracker
	VERSION
		1.0
	LANGUAGES
		CXX
)

# Change this to whatever you want to call your built application
# It will also set the name of the product installer built with NSIS
set (
	AUTO_APP_NAME
		DanDan's-Application
)

option (
	BUILD_INSTALLER
		"Build the project installer (requires NSIS in the PATH variable)"
)

if (BUILD_INSTALLER)

set (
	INSTALLER_NAME
		KinectTracker-Installer
)

set (
	COMPANY_NAME
		Lancophone
)

# Note that the version number and product name are passed to the NSIS script
add_custom_target (
	${INSTALLER_NAME}
	ALL
	DEPENDS
		${AUTO_APP_NAME}
	COMMAND
		"C:/Program Files (x86)/NSIS/makensis.exe"
		"/XOutFile ${CMAKE_SOURCE_DIR}/build/${AUTO_APP_NAME}_v${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}-Installer.exe"
		"/X!define PRODUCT_NAME ${AUTO_APP_NAME}"
		"/X!define COMPANY_NAME ${COMPANY_NAME}"
		"/X!define UNINSTALLER_NAME ${AUTO_APP_NAME}-Uninstaller"
		"/X!define PRODUCT_ROOT_DIR ${CMAKE_SOURCE_DIR}"
		${CMAKE_SOURCE_DIR}/scripts/installer.nsi
	COMMENT
		"Building ${INSTALLER_NAME}..."
)

endif()

# Specify that we want to build the tracker library
add_subdirectory (
	"src/HandTrackerLib"
)

add_subdirectory (
	"src/HandTracking"
)

#add_executable (
#      main
#      "src/main.cpp"
#)

#target_include_directories (
#	main
#	PRIVATE
#		"src/exampleLib/include"
#)

#target_link_libraries (
#	main
#	PUBLIC
#		ExampleLib
#)

## Again, install the executable so it can be run easily
#install (
#	TARGETS
#		main
#	RUNTIME
#	DESTINATION
#		${CMAKE_SOURCE_DIR}/exe
#)
